version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: cqrs
    environment:
      - RABBITMQ_DEFAULT_USER=default
      - RABBITMQ_DEFAULT_PASS=default
    ports:
      - '5672:5672'
      - '15672:15672'
    networks:
      - cqrs-network

  command-service:
    build:
      context: ./command
      additional_contexts:
        cqrs-root: ../cqrs
    container_name: command-service
    ports:
      - '3000:3000'
    environment:
      - PORT=3000
      - RABBITMQ_PROTOCOL=amqp
      - RABBITMQ_HOSTNAME=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USERNAME=default
      - RABBITMQ_PASSWORD=default
      - RABBITMQ_VHOST=/
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=cqrs
      - POSTGRES_HOST=command-db
      - POSTGRES_PORT=5432
    depends_on:
      - rabbitmq
      - command-db
    command:
      [
        './wait-for-it.sh',
        'rabbitmq:5672',
        '--',
        './wait-for-it.sh',
        'rabbitmq:15672',
        '--',
        './wait-for-it.sh',
        'command-db:5432',
        '--',
        'npm',
        'start',
      ]
    networks:
      - cqrs-network

  command-db:
    image: postgres
    container_name: command-db
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=command-db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=cqrs
    volumes:
      - ./command/postgres-data:/var/lib/postgresql/data
      - ./command/db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d cqrs']
      interval: 10s
      retries: 5
      timeout: 5s
    networks:
      - cqrs-network

  query-service:
    build:
      context: ./query
      additional_contexts:
        cqrs-root: ../cqrs
    container_name: query-service
    ports:
      - '3001:3001'
    environment:
      - PORT=3001
      - RABBITMQ_PROTOCOL=amqp
      - RABBITMQ_HOSTNAME=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USERNAME=default
      - RABBITMQ_PASSWORD=default
      - RABBITMQ_VHOST=/
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=cqrs
      - POSTGRES_HOST=query-db
      - POSTGRES_PORT=5432
    depends_on:
      - rabbitmq
      - query-db
    command:
      [
        './wait-for-it.sh',
        'rabbitmq:5672',
        '--',
        './wait-for-it.sh',
        'rabbitmq:15672',
        '--',
        './wait-for-it.sh',
        'query-db:5432',
        '--',
        'npm',
        'start',
      ]
    networks:
      - cqrs-network

  query-db:
    image: postgres
    container_name: query-db
    ports:
      - '5433:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=query-db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=cqrs
    volumes:
      - ./query/postgres-data:/var/lib/postgresql/data
      - ./query/db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d cqrs']
      interval: 10s
      retries: 5
      timeout: 5s
    networks:
      - cqrs-network

networks:
  cqrs-network:
